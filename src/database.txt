-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.appointments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  title text NOT NULL,
  description text,
  appointment_type text NOT NULL,
  scheduled_start timestamp with time zone NOT NULL,
  scheduled_end timestamp with time zone NOT NULL,
  actual_start timestamp with time zone,
  actual_end timestamp with time zone,
  location_address text,
  location_coordinates point,
  organizer_id uuid,
  attendees ARRAY NOT NULL DEFAULT '{}'::uuid[],
  status text DEFAULT 'scheduled'::text,
  cancellation_reason text,
  access_instructions text,
  special_requirements text,
  confirmation_required boolean DEFAULT true,
  reminder_sent boolean DEFAULT false,
  outcome_notes text,
  follow_up_required boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT appointments_pkey PRIMARY KEY (id),
  CONSTRAINT appointments_organizer_id_fkey FOREIGN KEY (organizer_id) REFERENCES public.user_profiles(id),
  CONSTRAINT appointments_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.approval_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  request_type text NOT NULL,
  requested_by uuid,
  amount numeric,
  description text NOT NULL,
  justification text,
  urgency text DEFAULT 'normal'::text,
  required_authority_level text NOT NULL,
  approvers ARRAY NOT NULL,
  status text DEFAULT 'pending'::text,
  approved_by uuid,
  approved_at timestamp with time zone,
  rejection_reason text,
  escalated boolean DEFAULT false,
  escalated_at timestamp with time zone,
  expires_at timestamp with time zone,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT approval_requests_pkey PRIMARY KEY (id),
  CONSTRAINT approval_requests_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT approval_requests_requested_by_fkey FOREIGN KEY (requested_by) REFERENCES public.user_profiles(id),
  CONSTRAINT approval_requests_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.audit_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  table_name text NOT NULL,
  record_id uuid NOT NULL,
  operation text NOT NULL,
  old_values jsonb,
  new_values jsonb,
  changed_fields ARRAY,
  user_id uuid,
  ip_address inet,
  user_agent text,
  session_id text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT audit_log_pkey PRIMARY KEY (id),
  CONSTRAINT audit_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.claims (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  claim_number text NOT NULL UNIQUE,
  policy_id uuid,
  incident_date date NOT NULL,
  reported_date date NOT NULL DEFAULT CURRENT_DATE,
  claim_type text NOT NULL,
  cause_of_loss text,
  incident_description text NOT NULL,
  estimated_loss numeric,
  final_settlement numeric,
  excess_applied numeric,
  status text DEFAULT 'reported'::text,
  priority text DEFAULT 'normal'::text,
  complexity text DEFAULT 'standard'::text,
  fraud_indicators jsonb DEFAULT '{}'::jsonb,
  reserved_amount numeric,
  handler_id uuid,
  adjuster_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT claims_pkey PRIMARY KEY (id),
  CONSTRAINT claims_handler_id_fkey FOREIGN KEY (handler_id) REFERENCES public.user_profiles(id),
  CONSTRAINT claims_policy_id_fkey FOREIGN KEY (policy_id) REFERENCES public.insurance_policies(id),
  CONSTRAINT claims_adjuster_id_fkey FOREIGN KEY (adjuster_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.client_money_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  transaction_type text NOT NULL,
  amount numeric NOT NULL,
  currency text DEFAULT 'GBP'::text,
  client_bank_account jsonb,
  transaction_reference text NOT NULL UNIQUE,
  authorization_level text NOT NULL,
  authorized_by uuid,
  reconciled boolean DEFAULT false,
  reconciliation_date date,
  fca_reportable boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT client_money_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT client_money_transactions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT client_money_transactions_authorized_by_fkey FOREIGN KEY (authorized_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.communication_preferences (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  email_notifications boolean DEFAULT true,
  sms_notifications boolean DEFAULT false,
  push_notifications boolean DEFAULT true,
  notification_types jsonb DEFAULT '{}'::jsonb,
  quiet_hours_start time without time zone,
  quiet_hours_end time without time zone,
  preferred_contact_method text DEFAULT 'email'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT communication_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT communication_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.compliance_checks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  regulation_type text NOT NULL,
  compliance_status text NOT NULL,
  checked_by uuid,
  check_date date NOT NULL DEFAULT CURRENT_DATE,
  expiry_date date,
  reference_number text,
  notes text,
  evidence_documents ARRAY DEFAULT '{}'::uuid[],
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  check_type text,
  assessment_date date,
  next_review_date date,
  assessed_by uuid,
  risk_rating text,
  findings text,
  recommendations text,
  action_required boolean DEFAULT false,
  remedial_actions ARRAY,
  regulatory_reference text,
  CONSTRAINT compliance_checks_pkey PRIMARY KEY (id),
  CONSTRAINT compliance_checks_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT compliance_checks_checked_by_fkey FOREIGN KEY (checked_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.consent_records (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  processing_purpose text,
  consent_given boolean NOT NULL,
  consent_method text NOT NULL,
  consent_evidence jsonb,
  withdrawal_date timestamp with time zone,
  withdrawal_method text,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT consent_records_pkey PRIMARY KEY (id),
  CONSTRAINT consent_records_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT consent_records_processing_purpose_fkey FOREIGN KEY (processing_purpose) REFERENCES public.data_processing_purposes(purpose_code)
);
CREATE TABLE public.contractor_assessments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  contractor_id uuid NOT NULL,
  damage_item_ids ARRAY DEFAULT '{}'::uuid[],
  assessment_type text DEFAULT 'quotation'::text,
  trade_speciality text,
  site_visit_date date,
  works_description text NOT NULL,
  methodology text,
  materials_specification text,
  labour_requirements text,
  equipment_requirements text,
  estimated_duration_days integer,
  proposed_start_date date,
  proposed_completion_date date,
  health_safety_method_statement text,
  insurance_requirements_met boolean DEFAULT false,
  qualifications_certificates_provided boolean DEFAULT false,
  subtotal_labour numeric DEFAULT 0,
  subtotal_materials numeric DEFAULT 0,
  subtotal_plant_equipment numeric DEFAULT 0,
  subtotal_other numeric DEFAULT 0,
  total_net_amount numeric NOT NULL,
  vat_rate numeric DEFAULT 20.0,
  vat_amount numeric NOT NULL,
  total_gross_amount numeric NOT NULL,
  payment_terms text,
  warranty_period_months integer DEFAULT 12,
  exclusions text,
  assumptions text,
  variations_policy text,
  quote_valid_until date,
  status text DEFAULT 'submitted'::text,
  reviewed_by uuid,
  reviewed_at timestamp with time zone,
  acceptance_notes text,
  rejection_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT contractor_assessments_pkey PRIMARY KEY (id),
  CONSTRAINT contractor_assessments_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT contractor_assessments_contractor_id_fkey FOREIGN KEY (contractor_id) REFERENCES public.user_profiles(id),
  CONSTRAINT contractor_assessments_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.cpd_records (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  qualification_id uuid,
  cpd_year integer NOT NULL,
  activity_type text NOT NULL,
  activity_title text NOT NULL,
  provider text,
  hours_claimed numeric NOT NULL,
  learning_outcomes text,
  evidence_document_id uuid,
  verified_by uuid,
  verification_date date,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cpd_records_pkey PRIMARY KEY (id),
  CONSTRAINT cpd_records_evidence_document_id_fkey FOREIGN KEY (evidence_document_id) REFERENCES public.documents(id),
  CONSTRAINT cpd_records_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES public.user_profiles(id),
  CONSTRAINT cpd_records_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT cpd_records_qualification_id_fkey FOREIGN KEY (qualification_id) REFERENCES public.professional_qualifications(id)
);
CREATE TABLE public.damage_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  reserve_id uuid,
  hod_code_id uuid NOT NULL,
  item_description text NOT NULL,
  location text,
  quantity numeric DEFAULT 1,
  unit_cost numeric NOT NULL,
  total_cost numeric NOT NULL,
  vat_rate numeric DEFAULT 20.0,
  vat_amount numeric DEFAULT 0,
  total_including_vat numeric NOT NULL,
  damage_cause text,
  damage_extent text,
  repair_method text,
  urgency text DEFAULT 'normal'::text,
  photos ARRAY DEFAULT '{}'::text[],
  measurements jsonb,
  supplier_quotes jsonb DEFAULT '{}'::jsonb,
  surveyor_notes text,
  contractor_notes text,
  status text DEFAULT 'estimated'::text,
  created_by uuid,
  surveyed_by uuid,
  surveyed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT damage_items_pkey PRIMARY KEY (id),
  CONSTRAINT damage_items_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id),
  CONSTRAINT damage_items_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT damage_items_reserve_id_fkey FOREIGN KEY (reserve_id) REFERENCES public.project_reserves(id),
  CONSTRAINT damage_items_hod_code_id_fkey FOREIGN KEY (hod_code_id) REFERENCES public.hod_codes(id),
  CONSTRAINT damage_items_surveyed_by_fkey FOREIGN KEY (surveyed_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.data_access_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  table_name text NOT NULL,
  record_id uuid,
  access_type text NOT NULL,
  data_classification text,
  authorized boolean NOT NULL,
  ip_address inet,
  session_id text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT data_access_log_pkey PRIMARY KEY (id),
  CONSTRAINT data_access_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.data_processing_purposes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  purpose_code text NOT NULL UNIQUE,
  purpose_name text NOT NULL,
  legal_basis text NOT NULL,
  description text NOT NULL,
  data_categories ARRAY NOT NULL,
  retention_period_months integer,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT data_processing_purposes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.data_retention_schedule (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  table_name text NOT NULL,
  record_id uuid NOT NULL,
  processing_purpose text,
  retention_start_date date NOT NULL,
  scheduled_deletion_date date NOT NULL,
  deletion_completed boolean DEFAULT false,
  deletion_date timestamp with time zone,
  legal_hold boolean DEFAULT false,
  legal_hold_reason text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT data_retention_schedule_pkey PRIMARY KEY (id),
  CONSTRAINT data_retention_schedule_processing_purpose_fkey FOREIGN KEY (processing_purpose) REFERENCES public.data_processing_purposes(purpose_code)
);
CREATE TABLE public.data_subject_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  request_type text NOT NULL,
  data_subject_id uuid,
  requester_name text NOT NULL,
  requester_email text NOT NULL,
  request_details text NOT NULL,
  identity_verified boolean DEFAULT false,
  verification_method text,
  status text DEFAULT 'received'::text,
  assigned_to uuid,
  due_date date NOT NULL,
  completion_date date,
  response_method text,
  rejection_reason text,
  extension_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT data_subject_requests_pkey PRIMARY KEY (id),
  CONSTRAINT data_subject_requests_data_subject_id_fkey FOREIGN KEY (data_subject_id) REFERENCES public.user_profiles(id),
  CONSTRAINT data_subject_requests_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.document_access (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  document_id uuid,
  shared_with_user uuid,
  shared_with_role text,
  shared_by_user uuid,
  shared_at timestamp without time zone DEFAULT now(),
  CONSTRAINT document_access_pkey PRIMARY KEY (id),
  CONSTRAINT document_access_shared_by_user_fkey FOREIGN KEY (shared_by_user) REFERENCES public.user_profiles(id),
  CONSTRAINT document_access_shared_with_user_fkey FOREIGN KEY (shared_with_user) REFERENCES public.user_profiles(id),
  CONSTRAINT document_access_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.document_access_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  document_id uuid,
  user_id uuid,
  access_type text NOT NULL,
  ip_address inet,
  user_agent text,
  accessed_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_access_log_pkey PRIMARY KEY (id),
  CONSTRAINT document_access_log_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT document_access_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.document_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  description text,
  color text DEFAULT '#6B7280'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.document_categorization_rules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  pattern text NOT NULL,
  suggested_type text NOT NULL,
  confidence_score numeric DEFAULT 0.80,
  active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_categorization_rules_pkey PRIMARY KEY (id)
);
CREATE TABLE public.document_comments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  document_id uuid,
  user_id uuid,
  comment_text text NOT NULL,
  page_number integer,
  coordinates jsonb,
  comment_type text DEFAULT 'general'::text,
  parent_comment_id uuid,
  resolved boolean DEFAULT false,
  resolved_by uuid,
  resolved_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_comments_pkey PRIMARY KEY (id),
  CONSTRAINT document_comments_resolved_by_fkey FOREIGN KEY (resolved_by) REFERENCES public.user_profiles(id),
  CONSTRAINT document_comments_parent_comment_id_fkey FOREIGN KEY (parent_comment_id) REFERENCES public.document_comments(id),
  CONSTRAINT document_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT document_comments_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.document_tag_links (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_id uuid,
  tag_id uuid,
  CONSTRAINT document_tag_links_pkey PRIMARY KEY (id),
  CONSTRAINT document_tag_links_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.document_tags(id),
  CONSTRAINT document_tag_links_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.document_tags (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT document_tags_pkey PRIMARY KEY (id)
);
CREATE TABLE public.document_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  type_code text NOT NULL UNIQUE,
  display_name text NOT NULL,
  description text,
  allowed_upload_roles ARRAY NOT NULL,
  required_for_stages ARRAY DEFAULT '{}'::text[],
  auto_approval boolean DEFAULT false,
  retention_years integer DEFAULT 7,
  confidentiality_level text DEFAULT 'internal'::text,
  file_size_limit_mb integer DEFAULT 50,
  allowed_file_extensions ARRAY DEFAULT ARRAY['.pdf'::text, '.jpg'::text, '.png'::text, '.doc'::text, '.docx'::text],
  mandatory_metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.document_versions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  document_id uuid,
  version_number integer NOT NULL,
  path text NOT NULL,
  file_size bigint,
  uploaded_by uuid,
  change_summary text,
  is_current boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_versions_pkey PRIMARY KEY (id),
  CONSTRAINT document_versions_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT document_versions_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.documents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  user_id uuid,
  name text,
  path text,
  type text CHECK (type = ANY (ARRAY['Contract'::text, 'Invoice'::text, 'Quote'::text, 'Report'::text, 'Photos - Before'::text, 'Photos - During'::text, 'Photos - After'::text, 'Photos - Damage'::text, 'Technical Drawing'::text, 'Specification'::text, 'Correspondence'::text, 'Insurance Document'::text, 'Certificate'::text, 'Schedule'::text, 'Policy Document'::text, 'Claims Document'::text, 'Other'::text])),
  uploaded_at timestamp with time zone DEFAULT now(),
  note text,
  tags ARRAY,
  file_size bigint CHECK (file_size IS NULL OR file_size > 0),
  updated_at timestamp with time zone DEFAULT now(),
  workflow_stage text,
  approval_status text DEFAULT 'pending'::text,
  approved_by uuid,
  approved_at timestamp with time zone,
  version_number integer DEFAULT 1,
  supersedes_document_id uuid,
  retention_policy text DEFAULT 'standard'::text,
  destruction_date date,
  confidentiality_level text DEFAULT 'internal'::text,
  visible_to_contractors boolean DEFAULT false,
  visible_to_customers boolean DEFAULT false,
  visibility_level text DEFAULT 'internal'::text CHECK (visibility_level = ANY (ARRAY['internal'::text, 'contractors'::text, 'customers'::text, 'public'::text])),
  shared_by uuid,
  shared_at timestamp with time zone,
  uploaded_by_role text,
  visibility text DEFAULT 'project_team'::text CHECK (visibility = ANY (ARRAY['private'::text, 'project_team'::text, 'public'::text])),
  CONSTRAINT documents_pkey PRIMARY KEY (id),
  CONSTRAINT documents_supersedes_document_id_fkey FOREIGN KEY (supersedes_document_id) REFERENCES public.documents(id),
  CONSTRAINT documents_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.user_profiles(id),
  CONSTRAINT documents_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT documents_shared_by_fkey FOREIGN KEY (shared_by) REFERENCES public.user_profiles(id),
  CONSTRAINT documents_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.fca_reporting_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type text NOT NULL,
  project_id uuid,
  user_id uuid,
  severity text NOT NULL,
  description text NOT NULL,
  root_cause text,
  remedial_action text,
  reported_to_fca boolean DEFAULT false,
  fca_reference text,
  reported_date date,
  status text DEFAULT 'open'::text,
  assigned_to uuid,
  due_date date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  event_category text,
  occurred_date date,
  regulatory_impact text,
  customer_impact text,
  financial_impact numeric,
  lessons_learned text,
  preventive_measures ARRAY,
  CONSTRAINT fca_reporting_events_pkey PRIMARY KEY (id),
  CONSTRAINT fca_reporting_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT fca_reporting_events_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.user_profiles(id),
  CONSTRAINT fca_reporting_events_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.hod_codes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code text NOT NULL UNIQUE,
  description text NOT NULL,
  category text NOT NULL,
  sub_category text,
  typical_rate_low numeric,
  typical_rate_high numeric,
  unit_type text DEFAULT 'per_item'::text,
  is_active boolean DEFAULT true,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT hod_codes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.insurance_policies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  policy_number text NOT NULL UNIQUE,
  policyholder_id uuid,
  insurer_organisation_id uuid,
  policy_type text NOT NULL,
  coverage_details jsonb NOT NULL DEFAULT '{}'::jsonb,
  policy_limits jsonb NOT NULL DEFAULT '{}'::jsonb,
  excess_amounts jsonb NOT NULL DEFAULT '{}'::jsonb,
  premium_annual numeric,
  inception_date date NOT NULL,
  renewal_date date NOT NULL,
  cancellation_date date,
  status text DEFAULT 'active'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT insurance_policies_pkey PRIMARY KEY (id),
  CONSTRAINT insurance_policies_policyholder_id_fkey FOREIGN KEY (policyholder_id) REFERENCES public.user_profiles(id),
  CONSTRAINT insurance_policies_insurer_organisation_id_fkey FOREIGN KEY (insurer_organisation_id) REFERENCES public.organisations(id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  quote_id uuid,
  invoice_number text NOT NULL UNIQUE,
  bill_to_organisation_id uuid,
  bill_to_contact jsonb NOT NULL,
  invoice_date date NOT NULL DEFAULT CURRENT_DATE,
  due_date date NOT NULL,
  payment_terms text,
  line_items jsonb NOT NULL DEFAULT '[]'::jsonb,
  subtotal numeric NOT NULL DEFAULT 0,
  vat_amount numeric NOT NULL DEFAULT 0,
  total_amount numeric NOT NULL DEFAULT 0,
  currency text DEFAULT 'GBP'::text,
  status text DEFAULT 'draft'::text,
  sent_at timestamp with time zone,
  paid_at timestamp with time zone,
  payment_method text,
  payment_reference text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT invoices_bill_to_organisation_id_fkey FOREIGN KEY (bill_to_organisation_id) REFERENCES public.organisations(id),
  CONSTRAINT invoices_quote_id_fkey FOREIGN KEY (quote_id) REFERENCES public.quotes(id),
  CONSTRAINT invoices_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.message_reactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id uuid NOT NULL,
  user_id uuid NOT NULL,
  emoji text NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT message_reactions_pkey PRIMARY KEY (id),
  CONSTRAINT message_reactions_message_id_fkey FOREIGN KEY (message_id) REFERENCES public.messages(id),
  CONSTRAINT message_reactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.message_reads (
  message_id uuid NOT NULL,
  user_id uuid NOT NULL,
  read_at timestamp with time zone DEFAULT now(),
  CONSTRAINT message_reads_pkey PRIMARY KEY (message_id, user_id),
  CONSTRAINT message_reads_message_id_fkey1 FOREIGN KEY (message_id) REFERENCES public.messages(id),
  CONSTRAINT message_reads_user_id_fkey1 FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  thread_id uuid,
  sender_id uuid,
  content text,
  created_at timestamp without time zone DEFAULT now(),
  attachments jsonb,
  updated_at timestamp without time zone,
  is_edited boolean DEFAULT false,
  reply_to uuid,
  mentions ARRAY DEFAULT '{}'::uuid[],
  is_deleted boolean DEFAULT false,
  deleted_at timestamp without time zone,
  deleted_by uuid,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.user_profiles(id),
  CONSTRAINT messages_thread_id_fkey FOREIGN KEY (thread_id) REFERENCES public.threads(id),
  CONSTRAINT messages_deleted_by_fkey FOREIGN KEY (deleted_by) REFERENCES public.user_profiles(id),
  CONSTRAINT messages_reply_to_fkey FOREIGN KEY (reply_to) REFERENCES public.messages(id)
);
CREATE TABLE public.mobile_uploads (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  document_id uuid,
  device_info jsonb,
  location_data jsonb,
  upload_method text,
  image_metadata jsonb,
  quality_score numeric,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT mobile_uploads_pkey PRIMARY KEY (id),
  CONSTRAINT mobile_uploads_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.notes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  user_id uuid,
  content text,
  pinned boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notes_pkey PRIMARY KEY (id),
  CONSTRAINT notes_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT notes_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  notification_type text NOT NULL,
  title text NOT NULL,
  message text NOT NULL,
  action_url text,
  priority text DEFAULT 'normal'::text,
  read boolean DEFAULT false,
  read_at timestamp with time zone,
  expires_at timestamp with time zone,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.organisations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['insurer'::text, 'managing_general_agent'::text, 'third_party_administrator'::text, 'loss_adjusting_firm'::text, 'claims_management_company'::text, 'surveyor_practice'::text, 'contractor_firm'::text, 'restoration_specialist'::text, 'legal_practice'::text, 'public_adjuster'::text])),
  company_number text,
  vat_number text,
  fca_reference text,
  professional_memberships ARRAY,
  registered_address jsonb,
  trading_address jsonb,
  phone text,
  email text,
  website text,
  pi_insurance_expiry date,
  public_liability_limit numeric,
  employers_liability_ref text,
  established_date date,
  employee_count integer,
  annual_turnover numeric,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT organisations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  invoice_id uuid,
  project_id uuid,
  amount numeric NOT NULL,
  currency text DEFAULT 'GBP'::text,
  payment_method text NOT NULL,
  payment_reference text,
  payment_date date NOT NULL,
  processed_by uuid,
  authorised_by uuid,
  bank_details jsonb,
  status text DEFAULT 'pending'::text,
  failure_reason text,
  reconciled boolean DEFAULT false,
  reconciled_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT payments_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(id),
  CONSTRAINT payments_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES public.user_profiles(id),
  CONSTRAINT payments_authorised_by_fkey FOREIGN KEY (authorised_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.pc_sums (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  reserve_id uuid,
  pc_sum_description text NOT NULL,
  allocated_amount numeric NOT NULL,
  spent_amount numeric DEFAULT 0,
  remaining_amount numeric DEFAULT 0,
  category text,
  justification text NOT NULL,
  scope_definition text,
  expected_completion_date date,
  actual_completion_date date,
  contractor_id uuid,
  status text DEFAULT 'allocated'::text,
  approval_required boolean DEFAULT true,
  approved_by uuid,
  approved_at timestamp with time zone,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT pc_sums_pkey PRIMARY KEY (id),
  CONSTRAINT pc_sums_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT pc_sums_reserve_id_fkey FOREIGN KEY (reserve_id) REFERENCES public.project_reserves(id),
  CONSTRAINT pc_sums_contractor_id_fkey FOREIGN KEY (contractor_id) REFERENCES public.user_profiles(id),
  CONSTRAINT pc_sums_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.user_profiles(id),
  CONSTRAINT pc_sums_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.pi_insurance_policies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  organisation_id uuid,
  policy_number text NOT NULL UNIQUE,
  insurer_name text NOT NULL,
  coverage_limit numeric NOT NULL,
  excess_amount numeric DEFAULT 0,
  coverage_type text NOT NULL,
  inception_date date NOT NULL,
  expiry_date date NOT NULL,
  renewal_due_date date DEFAULT (expiry_date - '30 days'::interval),
  status text DEFAULT 'active'::text,
  certificate_document_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT pi_insurance_policies_pkey PRIMARY KEY (id),
  CONSTRAINT pi_insurance_policies_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT pi_insurance_policies_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id),
  CONSTRAINT pi_insurance_policies_certificate_document_id_fkey FOREIGN KEY (certificate_document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.professional_qualifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  qualification_type text NOT NULL,
  awarding_body text NOT NULL,
  qualification_number text,
  award_date date NOT NULL,
  expiry_date date,
  verification_status text DEFAULT 'pending'::text,
  verification_date date,
  cpd_requirement boolean DEFAULT true,
  cpd_hours_required integer DEFAULT 20,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT professional_qualifications_pkey PRIMARY KEY (id),
  CONSTRAINT professional_qualifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.project_financials (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  budget_total numeric CHECK (budget_total >= 0::numeric),
  budget_allocated numeric DEFAULT 0 CHECK (budget_allocated >= 0::numeric),
  budget_spent numeric DEFAULT 0 CHECK (budget_spent >= 0::numeric),
  budget_remaining numeric DEFAULT (budget_total - budget_spent),
  contract_value numeric,
  invoice_total numeric DEFAULT 0,
  payment_received numeric DEFAULT 0,
  payment_outstanding numeric DEFAULT (invoice_total - payment_received),
  currency text DEFAULT 'GBP'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_financials_pkey PRIMARY KEY (id),
  CONSTRAINT project_financials_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.project_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  user_id uuid,
  role text NOT NULL CHECK (role = ANY (ARRAY['admin'::text, 'surveyor'::text, 'contractor'::text, 'handler'::text, 'client'::text])),
  invited_by uuid,
  invited_at timestamp with time zone DEFAULT now(),
  accepted_at timestamp with time zone,
  permissions ARRAY DEFAULT '{}'::text[],
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_members_pkey PRIMARY KEY (id),
  CONSTRAINT project_members_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES auth.users(id),
  CONSTRAINT project_members_user_id_fkey1 FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT project_members_project_id_fkey1 FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.project_milestones (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  title text NOT NULL,
  description text,
  due_date date,
  completed_date date,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'in_progress'::text, 'completed'::text, 'overdue'::text])),
  priority text DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'critical'::text])),
  assigned_to uuid,
  created_by uuid,
  dependencies ARRAY,
  completion_percentage integer DEFAULT 0 CHECK (completion_percentage >= 0 AND completion_percentage <= 100),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_milestones_pkey PRIMARY KEY (id),
  CONSTRAINT project_milestones_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES auth.users(id),
  CONSTRAINT project_milestones_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT project_milestones_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.project_reserves (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  reserve_type text NOT NULL DEFAULT 'initial'::text,
  total_reserve_amount numeric NOT NULL DEFAULT 0,
  building_reserve numeric DEFAULT 0,
  contents_reserve numeric DEFAULT 0,
  consequential_reserve numeric DEFAULT 0,
  alternative_accommodation_reserve numeric DEFAULT 0,
  professional_fees_reserve numeric DEFAULT 0,
  currency text DEFAULT 'GBP'::text,
  created_by uuid,
  approved_by uuid,
  approved_at timestamp with time zone,
  status text DEFAULT 'draft'::text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_reserves_pkey PRIMARY KEY (id),
  CONSTRAINT project_reserves_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.user_profiles(id),
  CONSTRAINT project_reserves_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT project_reserves_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.projects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  status text DEFAULT 'planning'::text CHECK (status = ANY (ARRAY['planning'::text, 'survey_booked'::text, 'survey_complete'::text, 'awaiting_agreement'::text, 'planning_authorisation'::text, 'scheduling_works'::text, 'works_in_progress'::text, 'works_complete'::text, 'snagging'::text, 'final_accounts'::text, 'closed'::text, 'on_hold'::text])),
  created_at timestamp with time zone DEFAULT now(),
  current_stage text,
  on_hold boolean DEFAULT false,
  hold_reason text,
  stage_updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  contact_name text,
  contact_phone text,
  contact_email text,
  contact_address text,
  vulnerability_flags jsonb,
  hold_reason_text text,
  hold_reason_notes text,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT projects_pkey PRIMARY KEY (id)
);
CREATE TABLE public.quote_comparisons (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  quote_ids ARRAY NOT NULL,
  comparison_criteria jsonb DEFAULT '{}'::jsonb,
  recommended_quote_id uuid,
  recommendation_reason text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT quote_comparisons_pkey PRIMARY KEY (id),
  CONSTRAINT quote_comparisons_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT quote_comparisons_recommended_quote_id_fkey FOREIGN KEY (recommended_quote_id) REFERENCES public.quotes(id),
  CONSTRAINT quote_comparisons_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.quotes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  contractor_id uuid,
  quote_number text NOT NULL UNIQUE,
  title text NOT NULL,
  description text,
  line_items jsonb NOT NULL DEFAULT '[]'::jsonb,
  subtotal numeric NOT NULL DEFAULT 0,
  vat_amount numeric NOT NULL DEFAULT 0,
  total_amount numeric NOT NULL DEFAULT 0,
  currency text DEFAULT 'GBP'::text,
  valid_until date,
  status text DEFAULT 'draft'::text,
  submitted_at timestamp with time zone,
  approved_at timestamp with time zone,
  approved_by uuid,
  rejection_reason text,
  attachments jsonb DEFAULT '[]'::jsonb,
  terms_conditions text,
  payment_terms text,
  warranty_period integer,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT quotes_pkey PRIMARY KEY (id),
  CONSTRAINT quotes_contractor_id_fkey FOREIGN KEY (contractor_id) REFERENCES public.user_profiles(id),
  CONSTRAINT quotes_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT quotes_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.reserve_movements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  reserve_id uuid NOT NULL,
  movement_type text NOT NULL,
  category text,
  amount numeric NOT NULL,
  reason text NOT NULL,
  reference_document text,
  reference_id uuid,
  authorized_by uuid,
  processed_by uuid,
  movement_date date DEFAULT CURRENT_DATE,
  accounting_period text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reserve_movements_pkey PRIMARY KEY (id),
  CONSTRAINT reserve_movements_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT reserve_movements_reserve_id_fkey FOREIGN KEY (reserve_id) REFERENCES public.project_reserves(id),
  CONSTRAINT reserve_movements_authorized_by_fkey FOREIGN KEY (authorized_by) REFERENCES public.user_profiles(id),
  CONSTRAINT reserve_movements_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.risk_assessments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  assessment_type text NOT NULL,
  risk_level text NOT NULL,
  identified_risks jsonb NOT NULL DEFAULT '[]'::jsonb,
  mitigation_measures jsonb NOT NULL DEFAULT '[]'::jsonb,
  assessor_id uuid,
  assessment_date date NOT NULL DEFAULT CURRENT_DATE,
  review_date date,
  status text DEFAULT 'active'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  risk_category text,
  risk_description text,
  inherent_risk text,
  current_controls ARRAY,
  control_effectiveness text DEFAULT 'not_assessed'::text,
  residual_risk text,
  risk_appetite text,
  action_required boolean DEFAULT false,
  mitigation_actions ARRAY,
  risk_owner uuid,
  review_frequency text,
  next_review_date date,
  last_review_date date,
  CONSTRAINT risk_assessments_pkey PRIMARY KEY (id),
  CONSTRAINT risk_assessments_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT risk_assessments_assessor_id_fkey FOREIGN KEY (assessor_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.role_permissions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  role text NOT NULL,
  permission_category text NOT NULL,
  permission text NOT NULL,
  description text,
  requires_additional_auth boolean DEFAULT false,
  CONSTRAINT role_permissions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.scope_variations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  reserve_id uuid,
  variation_type text NOT NULL,
  description text NOT NULL,
  original_scope text,
  revised_scope text,
  cost_impact numeric NOT NULL,
  time_impact_days integer DEFAULT 0,
  justification text NOT NULL,
  client_instructions text,
  surveyor_recommendation text,
  status text DEFAULT 'proposed'::text,
  client_approval_required boolean DEFAULT true,
  client_approved boolean DEFAULT false,
  client_approved_by text,
  client_approved_at timestamp with time zone,
  surveyor_id uuid,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT scope_variations_pkey PRIMARY KEY (id),
  CONSTRAINT scope_variations_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT scope_variations_reserve_id_fkey FOREIGN KEY (reserve_id) REFERENCES public.project_reserves(id),
  CONSTRAINT scope_variations_surveyor_id_fkey FOREIGN KEY (surveyor_id) REFERENCES public.user_profiles(id),
  CONSTRAINT scope_variations_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.security_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type text NOT NULL,
  user_id uuid,
  ip_address inet NOT NULL,
  user_agent text,
  geolocation jsonb,
  success boolean NOT NULL,
  risk_score integer CHECK (risk_score >= 1 AND risk_score <= 10),
  threat_indicators jsonb DEFAULT '{}'::jsonb,
  response_action text,
  investigation_status text DEFAULT 'none'::text,
  false_positive boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT security_events_pkey PRIMARY KEY (id),
  CONSTRAINT security_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.sla_tracking (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  stage text NOT NULL,
  due_date timestamp with time zone NOT NULL,
  warning_sent boolean DEFAULT false,
  escalation_sent boolean DEFAULT false,
  breach_logged boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sla_tracking_pkey PRIMARY KEY (id),
  CONSTRAINT sla_tracking_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.supplier_evaluations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  supplier_id uuid,
  project_id uuid,
  evaluator_id uuid,
  evaluation_date date NOT NULL DEFAULT CURRENT_DATE,
  criteria_scores jsonb NOT NULL DEFAULT '{}'::jsonb,
  overall_rating numeric NOT NULL,
  comments text,
  recommendations text,
  would_rehire boolean,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT supplier_evaluations_pkey PRIMARY KEY (id),
  CONSTRAINT supplier_evaluations_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT supplier_evaluations_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT supplier_evaluations_evaluator_id_fkey FOREIGN KEY (evaluator_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.suppliers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organisation_id uuid,
  supplier_type text NOT NULL,
  specialities ARRAY DEFAULT '{}'::text[],
  geographic_coverage ARRAY DEFAULT '{}'::text[],
  accreditations jsonb DEFAULT '{}'::jsonb,
  insurance_details jsonb DEFAULT '{}'::jsonb,
  preferred_supplier boolean DEFAULT false,
  risk_rating text DEFAULT 'medium'::text,
  performance_rating numeric DEFAULT 0.00,
  onboarding_completed boolean DEFAULT false,
  status text DEFAULT 'active'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT suppliers_pkey PRIMARY KEY (id),
  CONSTRAINT suppliers_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id)
);
CREATE TABLE public.survey_forms (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  form_type text NOT NULL,
  surveyor_id uuid NOT NULL,
  survey_date date NOT NULL,
  property_type text,
  year_built integer,
  construction_type text,
  occupancy_status text,
  access_gained boolean DEFAULT true,
  access_restrictions text,
  weather_conditions text,
  cause_of_loss text,
  incident_date date,
  damage_summary text NOT NULL,
  recommendations text,
  urgent_actions_required text,
  health_safety_concerns text,
  salvage_opportunities text,
  make_safe_required boolean DEFAULT false,
  make_safe_completed boolean DEFAULT false,
  make_safe_cost numeric,
  drying_equipment_required boolean DEFAULT false,
  drying_equipment_installed boolean DEFAULT false,
  environmental_monitoring jsonb,
  photos_taken integer DEFAULT 0,
  photo_references ARRAY DEFAULT '{}'::text[],
  sketch_plan_attached boolean DEFAULT false,
  additional_specialists_required ARRAY DEFAULT '{}'::text[],
  follow_up_required boolean DEFAULT false,
  follow_up_date date,
  form_completed_at timestamp with time zone,
  client_present boolean DEFAULT false,
  client_representative_name text,
  client_signature text,
  surveyor_signature text,
  form_status text DEFAULT 'in_progress'::text,
  approved_by uuid,
  approved_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT survey_forms_pkey PRIMARY KEY (id),
  CONSTRAINT survey_forms_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT survey_forms_surveyor_id_fkey FOREIGN KEY (surveyor_id) REFERENCES public.user_profiles(id),
  CONSTRAINT survey_forms_approved_by_fkey FOREIGN KEY (approved_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  assigned_to uuid,
  title text NOT NULL,
  description text,
  status text DEFAULT 'todo'::text CHECK (status = ANY (ARRAY['todo'::text, 'in_progress'::text, 'done'::text])),
  due_date timestamp without time zone,
  created_at timestamp with time zone DEFAULT now(),
  team_id uuid,
  updated_at timestamp with time zone DEFAULT now(),
  priority text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'urgent'::text])),
  created_by uuid,
  CONSTRAINT tasks_pkey PRIMARY KEY (id),
  CONSTRAINT tasks_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.user_profiles(id),
  CONSTRAINT tasks_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id),
  CONSTRAINT tasks_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.tcf_interactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  user_id uuid,
  interaction_type text NOT NULL,
  outcome_fair boolean,
  explanation text,
  vulnerability_considered boolean DEFAULT false,
  vulnerability_adjustments text,
  quality_score integer CHECK (quality_score >= 1 AND quality_score <= 5),
  reviewed_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tcf_interactions_pkey PRIMARY KEY (id),
  CONSTRAINT tcf_interactions_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES public.user_profiles(id),
  CONSTRAINT tcf_interactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT tcf_interactions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.teams (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT teams_pkey PRIMARY KEY (id)
);
CREATE TABLE public.thread_participants (
  thread_id uuid NOT NULL,
  user_id uuid NOT NULL,
  joined_at timestamp with time zone DEFAULT now(),
  last_read_at timestamp with time zone,
  CONSTRAINT thread_participants_pkey PRIMARY KEY (thread_id, user_id),
  CONSTRAINT thread_participants_thread_id_fkey1 FOREIGN KEY (thread_id) REFERENCES public.threads(id),
  CONSTRAINT thread_participants_user_id_fkey1 FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.threads (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  title text,
  created_at timestamp without time zone DEFAULT now(),
  created_by uuid,
  description text,
  thread_type text DEFAULT 'public'::text CHECK (thread_type = ANY (ARRAY['public'::text, 'private'::text, 'announcement'::text])),
  is_pinned boolean DEFAULT false,
  is_archived boolean DEFAULT false,
  updated_at timestamp without time zone DEFAULT now(),
  settings jsonb DEFAULT '{}'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT threads_pkey PRIMARY KEY (id),
  CONSTRAINT threads_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT threads_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.timeline_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  user_id uuid,
  type text,
  content text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT timeline_events_pkey PRIMARY KEY (id),
  CONSTRAINT timeline_events_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT timeline_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_organisations (
  user_id uuid NOT NULL,
  organisation_id uuid NOT NULL,
  role text DEFAULT 'member'::text CHECK (role = ANY (ARRAY['admin'::text, 'member'::text, 'viewer'::text])),
  joined_at timestamp with time zone DEFAULT now(),
  is_active boolean DEFAULT true,
  CONSTRAINT user_organisations_pkey PRIMARY KEY (user_id, organisation_id),
  CONSTRAINT user_organisations_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id),
  CONSTRAINT user_organisations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  title text,
  first_name text NOT NULL,
  surname text NOT NULL,
  preferred_name text,
  job_title text,
  role USER-DEFINED NOT NULL DEFAULT 'policyholder'::user_role_enum,
  professional_memberships ARRAY,
  professional_certifications ARRAY,
  qualification_numbers ARRAY,
  cpd_current boolean DEFAULT false,
  mobile_phone text CHECK (mobile_phone IS NULL OR mobile_phone ~* '^(\+44|0)[1-9]\d{8,9}$'::text),
  office_phone text,
  emergency_contact_phone text,
  address jsonb,
  organisation_id uuid,
  line_manager_id uuid,
  regions_covered ARRAY,
  specialisms ARRAY,
  maximum_claim_value numeric,
  travel_radius_miles integer,
  available_weekdays boolean DEFAULT true,
  available_weekends boolean DEFAULT false,
  available_evenings boolean DEFAULT false,
  available_emergency boolean DEFAULT false,
  can_authorise_payments boolean DEFAULT false,
  payment_authorisation_limit numeric,
  can_instruct_contractors boolean DEFAULT false,
  can_settle_claims boolean DEFAULT false,
  settlement_authority_limit numeric,
  can_access_sensitive_data boolean DEFAULT false,
  security_clearance_level text CHECK (security_clearance_level = ANY (ARRAY['basic'::text, 'enhanced'::text, 'government'::text])),
  last_security_check date,
  avatar_url text,
  timezone text DEFAULT 'Europe/London'::text,
  preferred_language text DEFAULT 'en-GB'::text,
  is_active boolean DEFAULT true,
  last_login timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  emergency_contact_encrypted text,
  ni_number_encrypted text,
  bank_details_encrypted text,
  date_of_birth date,
  ni_number text,
  emergency_contact_name text,
  address_line_1 text,
  address_line_2 text,
  city text,
  county text,
  postcode text,
  country text DEFAULT 'United Kingdom'::text,
  professional_qualifications ARRAY,
  fca_reference text,
  vat_number text,
  company_registration text,
  max_authorisation_limit numeric,
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_organisation_id_fkey FOREIGN KEY (organisation_id) REFERENCES public.organisations(id),
  CONSTRAINT user_profiles_line_manager_id_fkey FOREIGN KEY (line_manager_id) REFERENCES public.user_profiles(id),
  CONSTRAINT user_profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.vulnerability_flags (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  label text NOT NULL,
  description text,
  CONSTRAINT vulnerability_flags_pkey PRIMARY KEY (id)
);
CREATE TABLE public.workflow_automation_rules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  stage_from text NOT NULL,
  stage_to text NOT NULL,
  project_type text NOT NULL,
  conditions jsonb NOT NULL,
  auto_transition boolean DEFAULT false,
  notification_template text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_automation_rules_pkey PRIMARY KEY (id)
);
CREATE TABLE public.workflow_stages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  stage_order integer NOT NULL,
  project_type text NOT NULL,
  required_roles ARRAY NOT NULL,
  auto_transition boolean DEFAULT false,
  transition_conditions jsonb DEFAULT '{}'::jsonb,
  sla_hours integer,
  required_documents ARRAY,
  required_approvals ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_stages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.workflow_transitions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  from_stage text,
  to_stage text NOT NULL,
  transitioned_by uuid,
  transition_reason text,
  automated boolean DEFAULT false,
  conditions_met jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_transitions_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_transitions_transitioned_by_fkey FOREIGN KEY (transitioned_by) REFERENCES public.user_profiles(id),
  CONSTRAINT workflow_transitions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);